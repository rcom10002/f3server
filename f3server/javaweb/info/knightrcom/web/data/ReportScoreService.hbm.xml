<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
	<hibernate-mapping>
	<sql-query name="INSERT_PERIODLY_SUM">
	<![CDATA[
		INSERT INTO PERIODLY_SUM 
		SELECT * FROM (
			SELECT USER_ID userId,
			       TOTAL_SUM.TIMES totalTimes,
			       TOTAL_SUM.SCORES totalScores,
			       WIN_SUM.TIMES winTimes,
			       WIN_SUM.SCORES winScores,
			       LOSE_SUM.TIMES loseTimes,
			       LOSE_SUM.SCORES loseScores,
			       DRAW_SUM.TIMES drawTimes,
			       DRAW_SUM.SCORES drawScores
			  FROM PLAYER_PROFILE LEFT OUTER JOIN (
			SELECT PROFILE_ID, COUNT(SCORE) TIMES, SUM(SCORE) SCORES
			  FROM PLAYER_SCORE
			 GROUP BY PROFILE_ID
			) TOTAL_SUM ON PLAYER_PROFILE.PROFILE_ID = TOTAL_SUM.PROFILE_ID LEFT OUTER JOIN (
			SELECT PROFILE_ID, COUNT(SCORE) TIMES, SUM(SCORE) SCORES
			  FROM PLAYER_SCORE
			 WHERE SCORE > 0
			 GROUP BY PROFILE_ID
			) WIN_SUM ON PLAYER_PROFILE.PROFILE_ID = WIN_SUM.PROFILE_ID LEFT OUTER JOIN (
			SELECT PROFILE_ID, COUNT(SCORE) TIMES, SUM(SCORE) SCORES
			  FROM PLAYER_SCORE
			 WHERE SCORE < 0
			 GROUP BY PROFILE_ID
			) LOSE_SUM ON PLAYER_PROFILE.PROFILE_ID = LOSE_SUM.PROFILE_ID LEFT OUTER JOIN (
			SELECT PROFILE_ID, COUNT(SCORE) TIMES, SUM(SCORE) SCORES
			  FROM PLAYER_SCORE
			 WHERE SCORE = 0
			 GROUP BY PROFILE_ID
			) DRAW_SUM ON PLAYER_PROFILE.PROFILE_ID = DRAW_SUM.PROFILE_ID
		) V
    ]]>
	</sql-query>
	<sql-query name="REPORT_SCORE_INFO">
	<![CDATA[
			SELECT USER_ID userId,
			       TOTAL_SUM.TIMES totalTimes,
			       TOTAL_SUM.SCORES totalScores,
			       WIN_SUM.TIMES winTimes,
			       WIN_SUM.SCORES winScores,
			       LOSE_SUM.TIMES loseTimes,
			       LOSE_SUM.SCORES loseScores,
			       DRAW_SUM.TIMES drawTimes,
			       DRAW_SUM.SCORES drawScores
			  FROM PLAYER_PROFILE LEFT OUTER JOIN (
			SELECT PROFILE_ID, COUNT(SCORE) TIMES, SUM(SCORE) SCORES
			  FROM PLAYER_SCORE
			 GROUP BY PROFILE_ID
			) TOTAL_SUM ON PLAYER_PROFILE.PROFILE_ID = TOTAL_SUM.PROFILE_ID LEFT OUTER JOIN (
			SELECT PROFILE_ID, COUNT(SCORE) TIMES, SUM(SCORE) SCORES
			  FROM PLAYER_SCORE
			 WHERE SCORE > 0
			 GROUP BY PROFILE_ID
			) WIN_SUM ON PLAYER_PROFILE.PROFILE_ID = WIN_SUM.PROFILE_ID LEFT OUTER JOIN (
			SELECT PROFILE_ID, COUNT(SCORE) TIMES, SUM(SCORE) SCORES
			  FROM PLAYER_SCORE
			 WHERE SCORE < 0
			 GROUP BY PROFILE_ID
			) LOSE_SUM ON PLAYER_PROFILE.PROFILE_ID = LOSE_SUM.PROFILE_ID LEFT OUTER JOIN (
			SELECT PROFILE_ID, COUNT(SCORE) TIMES, SUM(SCORE) SCORES
			  FROM PLAYER_SCORE
			 WHERE SCORE = 0
			 GROUP BY PROFILE_ID
			) DRAW_SUM ON PLAYER_PROFILE.PROFILE_ID = DRAW_SUM.PROFILE_ID
    ]]>
	</sql-query>
	<sql-query name="REPORT_SCORE_INFO_COUNT">
	<![CDATA[
		SELECT COUNT(V.userId) AS RECORD_COUNT
		FROM (SELECT USER_ID userId,
			       TOTAL_SUM.TIMES totalTimes,
			       TOTAL_SUM.SCORES totalScores,
			       WIN_SUM.TIMES winTimes,
			       WIN_SUM.SCORES winScores,
			       LOSE_SUM.TIMES loseTimes,
			       LOSE_SUM.SCORES loseScores,
			       DRAW_SUM.TIMES drawTimes,
			       DRAW_SUM.SCORES drawScores
			  FROM PLAYER_PROFILE LEFT OUTER JOIN (
			SELECT PROFILE_ID, COUNT(SCORE) TIMES, SUM(SCORE) SCORES
			  FROM PLAYER_SCORE
			 GROUP BY PROFILE_ID
			) TOTAL_SUM ON PLAYER_PROFILE.PROFILE_ID = TOTAL_SUM.PROFILE_ID LEFT OUTER JOIN (
			SELECT PROFILE_ID, COUNT(SCORE) TIMES, SUM(SCORE) SCORES
			  FROM PLAYER_SCORE
			 WHERE SCORE > 0
			 GROUP BY PROFILE_ID
			) WIN_SUM ON PLAYER_PROFILE.PROFILE_ID = WIN_SUM.PROFILE_ID LEFT OUTER JOIN (
			SELECT PROFILE_ID, COUNT(SCORE) TIMES, SUM(SCORE) SCORES
			  FROM PLAYER_SCORE
			 WHERE SCORE < 0
			 GROUP BY PROFILE_ID
			) LOSE_SUM ON PLAYER_PROFILE.PROFILE_ID = LOSE_SUM.PROFILE_ID LEFT OUTER JOIN (
			SELECT PROFILE_ID, COUNT(SCORE) TIMES, SUM(SCORE) SCORES
			  FROM PLAYER_SCORE
			 WHERE SCORE = 0
			 GROUP BY PROFILE_ID
			) DRAW_SUM ON PLAYER_PROFILE.PROFILE_ID = DRAW_SUM.PROFILE_ID) V
    ]]>
	</sql-query>
</hibernate-mapping>
